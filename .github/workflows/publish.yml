jobs:
  build:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: release
      name: Set release version
      run: echo "::set-output name=version::${GITHUB_REF:10}"
    - continue-on-error: true
      uses: actions/checkout@v4.1.1
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 17
    - continue-on-error: true
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      name: Set up GPG
      run: echo -n "${GPG_PRIVATE_KEY}" | base64 --decode > ${GITHUB_WORKSPACE}/${GPG_KEY_ID}.gpg
    - continue-on-error: true
      name: Gradle Build
      run: ./gradlew build buildRpm buildDeb -Pversion=${{ steps.release.outputs.version
        }}
    - continue-on-error: true
      env:
        GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
      name: Gradle Publish
      run: "./gradlew publishToSonatype -Pversion=${{ steps.release.outputs.version\
        \ }} \\\n          -Psigning.keyId=${GPG_KEY_ID} \\\n          -Psigning.password=${GPG_PASSPHRASE}\
        \ \\\n          -Psigning.secretKeyRingFile=${GITHUB_WORKSPACE}/${GPG_KEY_ID}.gpg\n"
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish Deb to GitHub
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: application/octet-stream
        asset_name: allure_${{ steps.release.outputs.version }}-1_all.deb
        asset_path: ./allure-commandline/build/distributions/allure_${{ steps.release.outputs.version
          }}-1_all.deb
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish Rpm to GitHub
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: application/octet-stream
        asset_name: allure_${{ steps.release.outputs.version }}-1.noarch.rpm
        asset_path: ./allure-commandline/build/distributions/allure-${{ steps.release.outputs.version
          }}-1.noarch.rpm
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish Zip to GitHub
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: application/octet-stream
        asset_name: allure-${{ steps.release.outputs.version }}.zip
        asset_path: ./allure-commandline/build/distributions/allure-commandline-${{
          steps.release.outputs.version }}.zip
        upload_url: ${{ github.event.release.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Publish Tgz to GitHub
      uses: actions/upload-release-asset@v1.0.2
      with:
        asset_content_type: application/octet-stream
        asset_name: allure-${{ steps.release.outputs.version }}.tgz
        asset_path: ./allure-commandline/build/distributions/allure-commandline-${{
          steps.release.outputs.version }}.tgz
        upload_url: ${{ github.event.release.upload_url }}
name: Publish
on:
  repository_dispatch:
    types: trigger-ga___publish.yml
